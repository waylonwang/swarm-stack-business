# Update Time: 2024-2-1 21:10
version: "3.4"

services:
  # NocoBase
  nocobase:
    image: nocobase/nocobase:main
    networks: [network_cluster]
    restart: on-failure
    environment:
      # 直接使用Portainer容器内的环境变量
      DB_LOGGING: ${DB_LOGGING}       
      DB_DIALECT: ${DB_DIALECT}
      DB_HOST: ${DB_HOST}
      DB_DATABASE: ${DB_DATABASE}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      LOGGER_LEVEL: ${LOGGER_LEVEL}
      LOCAL_STORAGE_BASE_URL: ${LOCAL_STORAGE_BASE_URL}
      TZ: ${TZ}
    volumes:
      - nfs_nocobase:/app/nocobase/storage
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.nocobase.rule=Host(`nocobase.${DOMAIN_SWARM}`,`nocobase.${DOMAIN_EMERGENCY}`)"
        - "traefik.http.routers.nocobase.entrypoints=websecure"
        - "traefik.http.routers.nocobase.service=nocobase"
        - "traefik.http.routers.nocobase.middlewares=cors-headers@file,noauth-chain@file"
        - "traefik.http.services.nocobase.loadbalancer.server.port=80"
        - homepage.group=Application
        - homepage.name=云谷之家
        - homepage.icon=https://www.waylon.wang:4/images/services/nocobase.png
        - homepage.href=https://nocobase.${DOMAIN_SWARM}:4/
        - homepage.description=NocoBase低代码系统
        - homepage.siteMonitor=http://nocobase
        - homepage.weight=10
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.type == vm
          - node.labels.application == true

  # NocoDB
  nocodb:
    image: nocodb/nocodb:latest
    networks: [network_cluster]
    restart: on-failure
    environment:
      # 直接使用Portainer容器内的环境变量
      NC_DB: ${NC_DB}
      NC_PUBLIC_URL: https://nocodb.${DOMAIN_SWARM}:4
      TZ: ${TZ}
    volumes:
      - nfs_nocodb:/usr/app/data
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.nocodb.rule=Host(`nocodb.${DOMAIN_SWARM}`,`nocodb.${DOMAIN_EMERGENCY}`)"
        - "traefik.http.routers.nocodb.entrypoints=websecure"
        - "traefik.http.routers.nocodb.service=nocodb"
        - "traefik.http.routers.nocodb.middlewares=noauth-chain@file"
        - "traefik.http.services.nocodb.loadbalancer.server.port=8080"
        - homepage.group=Application
        - homepage.name=NocoDB
        - homepage.icon=https://www.waylon.wang:4/images/services/nocodb.png
        - homepage.href=https://nocodb.${DOMAIN_SWARM}:4/dashboard
        - homepage.description=NocoDB多维表格
        - homepage.siteMonitor=http://nocodb:8080
        - homepage.weight=11
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.type == vm
          - node.labels.application == true

  # Transmission
  transmission:
    image: chisbread/transmission:latest
    networks: [network_cluster]
    restart: on-failure  
    environment:
      # 直接使用Portainer容器内的环境变量
      PUID: ${TR_PUID}
      PGID: ${TR_PGID}
      USERNAME: ${TR_USERNAME}       
      PASSWORD: ${TR_PASSWORD}
      TZ: ${TZ}
    volumes:
      - nfs_transmission_config:/config
      - nfs_transmission_main_downloads:/media
      - nfs_transmission_ext_downloads:/media_ext
      - nfs_transmission_watch:/watch
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.transmission.rule=Host(`pt.${DOMAIN_SWARM}`,`pt.${DOMAIN_EMERGENCY}`)"
        - "traefik.http.routers.transmission.entrypoints=websecure"
        - "traefik.http.routers.transmission.service=transmission"
        - "traefik.http.routers.transmission.middlewares=noauth-chain@file"
        - "traefik.http.services.transmission.loadbalancer.server.port=9091"
        # - "traefik.tcp.routers.torrent.rule=HostSNI(`*`)"
        # - "traefik.tcp.routers.torrent.entrypoints=torrent"
        # - "traefik.tcp.routers.torrent.service=torrent"
        # - "traefik.tcp.services.torrent.loadbalancer.server.port=51413"   
        - homepage.group=Application
        - homepage.name=Transmission
        - homepage.icon=transmission.png
        - homepage.href=https://pt.${DOMAIN_SWARM}:4/
        - homepage.description=PT下载器
        - homepage.siteMonitor=http://transmission:9091
        - homepage.weight=20
        - homepage.widget.type=transmission
        - homepage.widget.url=https://pt.${DOMAIN_SWARM}:4    
        - homepage.widget.username=${TR_USERNAME}
        - homepage.widget.password=${TR_PASSWORD}
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.type == vm
          - node.labels.download == true

  # Qbittorrent
  qbittorrent:
    image: linuxserver/qbittorrent
    networks: [network_cluster]
    restart: on-failure  
    environment:
      # 直接使用Portainer容器内的环境变量
      PUID: ${QB_PUID}
      PGID: ${QB_PGID}
      # UMASK_SET: 022    # （可选）默认022
      # WEBUI_PORT: 4  # WEB UI 端口 
      TZ: ${TZ}
    volumes:
      - nfs_qbittorrent_config:/config
      - nfs_qbittorrent_main_downloads:/media
      - nfs_qbittorrent_ext_downloads:/media_ext
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.qbittorrent.rule=Host(`qb.${DOMAIN_SWARM}`,`qb.${DOMAIN_EMERGENCY}`)"
        - "traefik.http.routers.qbittorrent.entrypoints=websecure"
        - "traefik.http.routers.qbittorrent.service=qbittorrent"
        - "traefik.http.routers.qbittorrent.middlewares=noauth-chain@file"
        - "traefik.http.services.qbittorrent.loadbalancer.server.port=8080"
        # - "traefik.tcp.routers.qb_pt.rule=HostSNI(`*`)"
        # - "traefik.tcp.routers.qb_pt.entrypoints=qb_pt"
        # - "traefik.tcp.routers.qb_pt.service=qb_pt"
        # - "traefik.tcp.services.qb_pt.loadbalancer.server.port=6881"   
        - homepage.group=Application
        - homepage.name=Qbittorrent
        - homepage.icon=qbittorrent.png
        - homepage.href=https://qb.${DOMAIN_SWARM}:4/
        - homepage.description=PT下载器
        - homepage.siteMonitor=http://qbittorrent:8080
        - homepage.weight=21
        - homepage.widget.type=qbittorrent
        - homepage.widget.url=https://pt.${DOMAIN_SWARM}:4    
        - homepage.widget.username=${QB_USERNAME}
        - homepage.widget.password=${QB_PASSWORD}
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.type == vm
          - node.labels.download == true

  # IYUU
  # iyuu:
  #   image: iyuucn/iyuuplus:latest
  #   networks: [network_cluster]
  #   restart: on-failure  
  #   environment:
  #     # 直接使用Portainer容器内的环境变量
  #     TZ: ${TZ}
  #   volumes:
  #     - nfs_iyuu_src:/IYUU
  #     - nfs_iyuu_tr:/tr
  #   deploy:
  #     labels:
  #       - "traefik.enable=true"
  #       - "traefik.http.routers.iyuu.rule=Host(`iyuu.${DOMAIN_SWARM}`)"
  #       - "traefik.http.routers.iyuu.entrypoints=websecure"
  #       - "traefik.http.routers.iyuu.service=iyuu"
  #       - "traefik.http.routers.iyuu.middlewares=noauth-chain@file"
  #       - "traefik.http.services.iyuu.loadbalancer.server.port=8787"  
  #       - homepage.group=Application
  #       - homepage.name=IYUU
  #       - homepage.icon=transmission.png
  #       - homepage.href=https://iyuu.${DOMAIN_SWARM}:4/
  #       - homepage.description=PT辅种
  #       - homepage.siteMonitor=http://transmission:8787
  #       - homepage.weight=21
  #     mode: replicated
  #     replicas: 1
  #     placement:
  #       constraints:
  #         - node.labels.type == vm
  #         - node.labels.download == true
  # BaiduPCS
  # baidupcs:
  #   image: oldiy/baidupcs:latest
  #   networks: [network_cluster]
  #   restart: on-failure  
  #   environment:
  #     # 直接使用Portainer容器内的环境变量
  #     PUID: ${TR_PUID}
  #     PGID: ${TR_PGID}
  #     TZ: ${TZ}    
  #   volumes:
  #     - nfs_baidupcs_config:/root/.config/BaiduPCS-Go
  #     - nfs_baidupcs_client:/opt/BaiduPCS
  #     - nfs_baidupcs_download:/root/Downloads
  #   deploy:
  #     labels:
  #       - "traefik.enable=true"
  #       - "traefik.http.routers.baidupcs.rule=Host(`baidupcs.${DOMAIN_SWARM}`)"
  #       - "traefik.http.routers.baidupcs.entrypoints=websecure"
  #       - "traefik.http.routers.baidupcs.service=baidupcs"
  #       - "traefik.http.routers.baidupcs.middlewares=noauth-chain@file"
  #       - "traefik.http.services.baidupcs.loadbalancer.server.port=5299"
  #       - homepage.group=Application
  #       - homepage.name=BaiduPCS
  #       - homepage.icon=https://www.waylon.wang:4/images/services/baidupan.png
  #       - homepage.href=https://baidupcs.${DOMAIN_SWARM}:4/
  #       - homepage.description=百度云盘下载器
  #       - homepage.siteMonitor=http://baidupcs:5299
  #       - homepage.weight=21        
  #     mode: replicated
  #     replicas: 1
  #     placement:
  #       constraints:
  #         - node.labels.type == vm
  #         - node.labels.download == true            

  # flame:
  #   image: pawelmalak/flame
  #   networks: [network_cluster]
  #   restart: on-failure    
  #   environment:
  #     PASSWORD: ${FLAME_PASSWORD}
  #     TZ: ${TZ}   
  #   volumes:
  #     - nfs_flame_data:/app/data
  #   deploy:      
  #     labels:
  #       - "traefik.enable=true"
  #       - "traefik.http.routers.flame.rule=Host(`work.${DOMAIN_SWARM}`)"
  #       - "traefik.http.routers.flame.entrypoints=websecure"
  #       - "traefik.http.routers.flame.service=flame"
  #       - "traefik.http.routers.flame.middlewares=cors-headers@file,noauth-chain@file"
  #       - "traefik.http.services.flame.loadbalancer.server.port=5005"
  #       - homepage.group=Application
  #       - homepage.name=Work StartPage
  #       - homepage.icon=hyperion.png
  #       - homepage.href=https://work.${DOMAIN_SWARM}:4/
  #       - homepage.description=Work StartPage
  #       - homepage.siteMonitor=http://flame:5005
  #       - homepage.weight=31
  #     mode: replicated
  #     replicas: 1
  #     placement:
  #       constraints:
  #         - node.labels.type == vm
  #         - node.labels.application == true   

  # dashmachine:
  #   image: rmountjoy/dashmachine:latest
  #   networks: [network_cluster]
  #   restart: on-failure        
  #   environment:
  #     TZ: ${TZ} 
  #   # volumes:
  #   #   - /path/to/appdata/config:/config      
  #   deploy:      
  #     labels:
  #       - "traefik.enable=true"
  #       - "traefik.http.routers.dashmachine.rule=Host(`dashmachine.${DOMAIN_SWARM}`)"
  #       - "traefik.http.routers.dashmachine.entrypoints=websecure"
  #       - "traefik.http.routers.dashmachine.service=dashmachine"
  #       - "traefik.http.routers.dashmachine.middlewares=cors-headers@file,noauth-chain@file"
  #       - "traefik.http.services.dashmachine.loadbalancer.server.port=5000"
  #       - homepage.group=Application
  #       - homepage.name=dashmachine
  #       - homepage.icon=hyperion.png
  #       - homepage.href=https://dashmachine.${DOMAIN_SWARM}:4/
  #       - homepage.description=dashmachine
  #       - homepage.siteMonitor=http://dashmachine:5000
  #       - homepage.weight=21
  #     mode: replicated
  #     replicas: 1
  #     placement:
  #       constraints:
  #         - node.labels.type == vm
  #         - node.labels.application == true  

  startpage:
    image: loganmarchione/docker-php-startpage:latest
    networks: [network_cluster]
    restart: on-failure        
    environment:
      TZ: ${TZ} 
    volumes:
      - nfs_startpage:/var/www/html/user_includes    
    deploy:      
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.startpage.rule=Host(`startpage.${DOMAIN_SWARM}`,`startpage.${DOMAIN_EMERGENCY}`)"
        - "traefik.http.routers.startpage.entrypoints=websecure"
        - "traefik.http.routers.startpage.service=startpage"
        - "traefik.http.routers.startpage.middlewares=cors-headers@file,auth-chain@file"
        - "traefik.http.services.startpage.loadbalancer.server.port=80"
        - homepage.group=Application
        - homepage.name=startpage
        - homepage.icon=hoobs.png
        - homepage.href=https://startpage.${DOMAIN_SWARM}:4/
        - homepage.description=startpage
        - homepage.siteMonitor=http://startpage
        - homepage.weight=30
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.type == vm
          - node.labels.application == true            

  # RustDesk Server
  rustdesk-server:
    image: rustdesk/rustdesk-server-s6:latest-amd64
    networks: [network_cluster]
    restart: on-failure
    ports:
      - 21115:21115
      - 21116:21116
      - 21116:21116/udp
      - 21117:21117
      - 21118:21118     
      - 21119:21119
    volumes:
      - nfs_rustdesk_server:/root
    deploy:
      labels:
        - homepage.group=Application
        - homepage.name=RustDesk Server
        - homepage.icon=hyperion.png
        - homepage.description=RustDesk Server
        - homepage.ping=rustdesk-server
        - homepage.weight=40
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.type == vm
          - node.labels.application == true     

  rustdesk-api-server:
    image: ghcr.nju.edu.cn/kingmo888/rustdesk-api-server:latest
    networks: [network_cluster]
    restart: on-failure    
    ports:
      - 21114:21114
    environment:
      HOST: 0.0.0.0
      CSRF_TRUSTED_ORIGINS: https://rustdeskapi.${DOMAIN_SWARM}:4 #修改CSRF_TRUSTED_ORIGINS为你的访问地址
      TZ: ${TZ}   
    volumes:
      - nfs_rustdesk_api_db:/rustdesk-api-server/db #修改/yourpath/db为你宿主机数据库挂载目录
    deploy:      
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.rustdeskapi.rule=Host(`rustdeskapi.${DOMAIN_SWARM}`,`rustdeskapi.${DOMAIN_EMERGENCY}`)"
        - "traefik.http.routers.rustdeskapi.entrypoints=websecure"
        - "traefik.http.routers.rustdeskapi.service=rustdeskapi"
        - "traefik.http.routers.rustdeskapi.middlewares=cors-headers@file,noauth-chain@file"
        - "traefik.http.services.rustdeskapi.loadbalancer.server.port=21114"
        - homepage.group=Application
        - homepage.name=RustDesk API Server
        - homepage.icon=hyperion.png
        - homepage.href=https://rustdeskapi.${DOMAIN_SWARM}:4/
        - homepage.description=RustDesk API Server
        - homepage.siteMonitor=http://rustdesk-api-server:21114
        - homepage.weight=41
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.type == vm
          - node.labels.application == true   

  # Next-Terminal
  guacd:
    image: dushixiang/guacd:latest
    networks: [network_cluster]
    restart: on-failure    
    volumes:
      - nfs_terminal_data:/usr/local/next-terminal/data
    deploy:      
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.type == vm
          - node.labels.application == true
  next-terminal:
    image: dushixiang/next-terminal:latest
    networks: [network_cluster]
    restart: on-failure
    environment:
      DB: sqlite
      GUACD_HOSTNAME: guacd
      GUACD_PORT: 4822
      TZ: ${TZ} 
    volumes:
      - nfs_terminal_data:/usr/local/next-terminal/data
      - nfs_terminal_fonts:/usr/share/fonts 
    deploy:      
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.terminal.rule=Host(`terminal.${DOMAIN_SWARM}`,`terminal.${DOMAIN_EMERGENCY}`)"
        - "traefik.http.routers.terminal.entrypoints=websecure"
        - "traefik.http.routers.terminal.service=terminal"
        - "traefik.http.routers.terminal.middlewares=cors-headers@file,noauth-chain@file"
        - "traefik.http.services.terminal.loadbalancer.server.port=8088"
        - homepage.group=Application
        - homepage.name=Next Terminal
        - homepage.icon=https://www.waylon.wang:4/images/services/nextterminal.png
        - homepage.href=https://terminal.${DOMAIN_SWARM}:4/
        - homepage.description=堡垒机
        - homepage.siteMonitor=http://next-terminal:8088
        - homepage.weight=42
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.type == vm
          - node.labels.application == true 


networks:
  network_cluster:
    external: true

x-common-keys-volume: &common-keys-volume
  type: nfs
  o: addr=${NFS_SERVER},rw,nfsvers=4

x-common-media-main-volume: &common-media-main-volume
  type: nfs
  o: addr=${MEDIA_SERVER},rw,nfsvers=4

x-common-media-ext-volume: &common-media-ext-volume
  type: nfs
  o: addr=${MEDIA_EXT_SERVER},rw,nfsvers=4

volumes:
  # NFS
  nfs_nocobase:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/application/business/nocobase/storage
  nfs_nocodb:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/application/business/nocodb/data
  nfs_transmission_config:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/application/download/transmission/config
  nfs_transmission_main_downloads:
    driver: local
    driver_opts:
      <<: *common-media-main-volume
      device: :${MEDIA_DEVICE}   
  nfs_transmission_ext_downloads:
    driver: local
    driver_opts:
      <<: *common-media-ext-volume
      device: :${MEDIA_DEVICE}       
  nfs_transmission_watch:
    driver: local
    driver_opts:
      <<: *common-media-main-volume
      device: :${MEDIA_DEVICE}/watch    
  nfs_qbittorrent_config:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/application/download/qbittorrent/config
  nfs_qbittorrent_main_downloads:
    driver: local
    driver_opts:
      <<: *common-media-main-volume
      device: :${MEDIA_DEVICE}   
  nfs_qbittorrent_ext_downloads:
    driver: local
    driver_opts:
      <<: *common-media-ext-volume
      device: :${MEDIA_DEVICE}       
  nfs_iyuu_src:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/application/download/iyuu/src  
  nfs_iyuu_tr:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/application/download/transmission/config/torrents            
  nfs_baidupcs_client:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/application/download/baidupcs/client   
  nfs_baidupcs_config:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/application/download/baidupcs/config
  nfs_baidupcs_download:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${DOWNLOAD_DEVICE}/baidupcs         
  # nfs_flame_data:
  #   driver: local
  #   driver_opts:
  #     <<: *common-keys-volume
  #     device: :${NFS_DEVICE}/application/business/flame/data     
  nfs_startpage:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/application/business/startpage          
  nfs_rustdesk_server:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/application/monitor/rustdesk/data   
  nfs_rustdesk_api_db:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/application/monitor/rustdeskapi/db  
  nfs_terminal_data:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/application/monitor/next-terminal/data         
  nfs_terminal_fonts:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/application/monitor/next-terminal/fonts         
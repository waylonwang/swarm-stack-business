# Update Time: 2024-2-1 21:10
version: "3.4"

services:
  # NocoBase
  nocobase:
    # image: nocobase/nocobase:0.21.0-alpha.16
    image: nocobase/nocobase:main
    networks: [network_cluster]
    restart: on-failure
    environment:
      # 直接使用Portainer容器内的环境变量
      DB_LOGGING: ${DB_LOGGING}       
      DB_DIALECT: ${DB_DIALECT}
      DB_HOST: ${DB_HOST}
      DB_DATABASE: ${DB_DATABASE}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      LOGGER_LEVEL: ${LOGGER_LEVEL}
      LOCAL_STORAGE_BASE_URL: ${LOCAL_STORAGE_BASE_URL}
      TZ: ${TZ}
    volumes:
      - nfs_nocobase:/app/nocobase/storage
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.nocobase.rule=Host(`nocobase.${DOMAIN_SWARM}`,`nocobase.${DOMAIN_EMERGENCY}`)"
        - "traefik.http.routers.nocobase.entrypoints=websecure"
        - "traefik.http.routers.nocobase.service=nocobase"
        - "traefik.http.routers.nocobase.middlewares=cors-headers@file,noauth-chain@file"
        - "traefik.http.services.nocobase.loadbalancer.server.port=80"
        - homepage.group=Application
        - homepage.name=云谷之家
        - homepage.icon=https://www.waylon.wang:4/images/services/nocobase.png
        - homepage.href=https://nocobase.${DOMAIN_SWARM}:4/
        - homepage.description=NocoBase低代码系统
        - homepage.siteMonitor=http://nocobase
        - homepage.weight=10
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.type == vm
          - node.labels.application == true

  # NocoDB
  nocodb:
    image: nocodb/nocodb:latest
    networks: [network_cluster]
    restart: on-failure
    environment:
      # 直接使用Portainer容器内的环境变量
      NC_DB: ${NC_DB}
      NC_PUBLIC_URL: https://nocodb.${DOMAIN_SWARM}:4
      TZ: ${TZ}
    volumes:
      - nfs_nocodb:/usr/app/data
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.nocodb.rule=Host(`nocodb.${DOMAIN_SWARM}`,`nocodb.${DOMAIN_EMERGENCY}`)"
        - "traefik.http.routers.nocodb.entrypoints=websecure"
        - "traefik.http.routers.nocodb.service=nocodb"
        - "traefik.http.routers.nocodb.middlewares=authelia"
        - "traefik.http.services.nocodb.loadbalancer.server.port=8080"
        - homepage.group=Application
        - homepage.name=NocoDB
        - homepage.icon=https://www.waylon.wang:4/images/services/nocodb.png
        - homepage.href=https://nocodb.${DOMAIN_SWARM}:4/dashboard
        - homepage.description=NocoDB多维表格
        - homepage.siteMonitor=http://nocodb:8080
        - homepage.weight=11
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.type == vm
          - node.labels.application == true

  # Draw.io
  drawio:
    image: jgraph/drawio:latest
    networks: [network_cluster]
    restart: on-failure
    environment:
      # 直接使用Portainer容器内的环境变量
      TZ: ${TZ}
    volumes:
      - nfs_drawio:/usr/local/tomcat/webapps/draw/js
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.drawio.rule=Host(`drawio.${DOMAIN_SWARM}`,`drawio.${DOMAIN_EMERGENCY}`)"
        - "traefik.http.routers.drawio.entrypoints=websecure"
        - "traefik.http.routers.drawio.service=drawio"
        - "traefik.http.routers.drawio.middlewares=noauth-chain@file"
        - "traefik.http.services.drawio.loadbalancer.server.port=8080"
        - homepage.group=Application
        - homepage.name=Draw.io
        - homepage.icon=diagrams-net.png
        - homepage.href=https://drawio.${DOMAIN_SWARM}:4
        - homepage.description=Draw.io绘图
        - homepage.siteMonitor=http://drawio:8080
        - homepage.weight=12
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.type == vm
          - node.labels.application == true          

  # flame:
  #   image: pawelmalak/flame
  #   networks: [network_cluster]
  #   restart: on-failure    
  #   environment:
  #     PASSWORD: ${FLAME_PASSWORD}
  #     TZ: ${TZ}   
  #   volumes:
  #     - nfs_flame_data:/app/data
  #   deploy:      
  #     labels:
  #       - "traefik.enable=true"
  #       - "traefik.http.routers.flame.rule=Host(`work.${DOMAIN_SWARM}`)"
  #       - "traefik.http.routers.flame.entrypoints=websecure"
  #       - "traefik.http.routers.flame.service=flame"
  #       - "traefik.http.routers.flame.middlewares=cors-headers@file,noauth-chain@file"
  #       - "traefik.http.services.flame.loadbalancer.server.port=5005"
  #       - homepage.group=Application
  #       - homepage.name=Work StartPage
  #       - homepage.icon=hyperion.png
  #       - homepage.href=https://work.${DOMAIN_SWARM}:4/
  #       - homepage.description=Work StartPage
  #       - homepage.siteMonitor=http://flame:5005
  #       - homepage.weight=31
  #     mode: replicated
  #     replicas: 1
  #     placement:
  #       constraints:
  #         - node.labels.type == vm
  #         - node.labels.application == true   

  # dashmachine:
  #   image: rmountjoy/dashmachine:latest
  #   networks: [network_cluster]
  #   restart: on-failure        
  #   environment:
  #     TZ: ${TZ} 
  #   # volumes:
  #   #   - /path/to/appdata/config:/config      
  #   deploy:      
  #     labels:
  #       - "traefik.enable=true"
  #       - "traefik.http.routers.dashmachine.rule=Host(`dashmachine.${DOMAIN_SWARM}`)"
  #       - "traefik.http.routers.dashmachine.entrypoints=websecure"
  #       - "traefik.http.routers.dashmachine.service=dashmachine"
  #       - "traefik.http.routers.dashmachine.middlewares=cors-headers@file,noauth-chain@file"
  #       - "traefik.http.services.dashmachine.loadbalancer.server.port=5000"
  #       - homepage.group=Application
  #       - homepage.name=dashmachine
  #       - homepage.icon=hyperion.png
  #       - homepage.href=https://dashmachine.${DOMAIN_SWARM}:4/
  #       - homepage.description=dashmachine
  #       - homepage.siteMonitor=http://dashmachine:5000
  #       - homepage.weight=21
  #     mode: replicated
  #     replicas: 1
  #     placement:
  #       constraints:
  #         - node.labels.type == vm
  #         - node.labels.application == true  

  startpage:
    image: loganmarchione/docker-php-startpage:latest
    networks: [network_cluster]
    restart: on-failure        
    environment:
      TZ: ${TZ} 
    volumes:
      - nfs_startpage:/var/www/html/user_includes    
    deploy:      
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.startpage.rule=Host(`startpage.${DOMAIN_SWARM}`,`startpage.${DOMAIN_EMERGENCY}`)"
        - "traefik.http.routers.startpage.entrypoints=websecure"
        - "traefik.http.routers.startpage.service=startpage"
        - "traefik.http.routers.startpage.middlewares=authelia"
        - "traefik.http.services.startpage.loadbalancer.server.port=80"
        - homepage.group=Application
        - homepage.name=startpage
        - homepage.icon=hoobs.png
        - homepage.href=https://startpage.${DOMAIN_SWARM}:4/
        - homepage.description=startpage
        - homepage.siteMonitor=http://startpage
        - homepage.weight=30
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.type == vm
          - node.labels.application == true            


networks:
  network_cluster:
    external: true

x-common-keys-volume: &common-keys-volume
  type: nfs
  o: addr=${NFS_SERVER},rw,nfsvers=4

x-common-media-main-volume: &common-media-main-volume
  type: nfs
  o: addr=${MEDIA_SERVER},rw,nfsvers=4

x-common-media-ext-volume: &common-media-ext-volume
  type: nfs
  o: addr=${MEDIA_EXT_SERVER},rw,nfsvers=4

volumes:
  # NFS
  nfs_nocobase:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/application/business/nocobase/storage
  nfs_nocodb:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/application/business/nocodb/data
  nfs_drawio:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/application/business/drawio/data            
  # nfs_flame_data:
  #   driver: local
  #   driver_opts:
  #     <<: *common-keys-volume
  #     device: :${NFS_DEVICE}/application/business/flame/data     
  nfs_startpage:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/application/business/startpage                  